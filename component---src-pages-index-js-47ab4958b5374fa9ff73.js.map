{"version":3,"sources":["webpack:///./src/components/BlogPosts.js","webpack:///./src/components/HeroIntro.js","webpack:///./src/components/HeroProjects.js","webpack:///./src/pages/index.js"],"names":["PostsEmpty","PostsList","author","posts","map","post","featuredImgFixed","frontmatter","featuredImage","childImageSharp","fixed","itemScope","itemType","key","fields","slug","className","itemProp","to","title","description","excerpt","date","BlogPosts","content","length","HeroProjects","href","pageQuery","IndexPage","data","location","site","siteMetadata","name","allMarkdownRemark","nodes","siteTitle","Layout","SEO","HeroIntro","About"],"mappings":"kNAIMA,EAAa,WACjB,OACE,yLAQEC,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC3B,OACE,oCACGA,EAAMC,KAAI,SAACC,GAAU,IAAD,MACbC,EAAgB,UACpBD,EAAKE,mBADe,iBACpB,EAAkBC,qBADE,iBACpB,EAAiCC,uBADb,aACpB,EAAkDC,MAEpD,OACE,6BACEC,WAAS,EACTC,SAAS,4BACTC,IAAKR,EAAKS,OAAOC,MAEjB,yBAAKC,UAAU,WACb,yBAAKA,UAAU,UACb,wBACEA,UAAU,iCACVC,SAAS,YAET,kBAAC,OAAD,CAAMC,GAAIb,EAAKS,OAAOC,KAAME,SAAS,OAClCZ,EAAKE,YAAYY,QAGtB,wBACEH,UAAU,wCACVC,SAAS,eAERZ,EAAKE,YAAYa,aAAef,EAAKgB,SAExC,uBAAGL,UAAU,aACX,4BACGd,GACC,0CACK,kBAAC,OAAD,CAAMgB,GAAG,KAAKhB,GADnB,YAIDG,EAAKE,YAAYe,QAIvBhB,GACC,yBAAKU,UAAU,oBACb,kBAAC,OAAD,CAAME,GAAIb,EAAKS,OAAOC,KAAME,SAAS,OACnC,4BAAQD,UAAU,eAChB,kBAAC,IAAD,CAAKN,MAAOJ,QAMtB,yBAAKU,UAAU,aACb,oCA6BCO,EApBG,SAAC,GAAuB,IACpCC,EADetB,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAS3B,OALEqB,EADmB,IAAjBrB,EAAMsB,OACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAWvB,OAAQA,EAAQC,MAAOA,IAI5C,6BAASa,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBAAoBQ,OCtE9BE,EAfM,WACnB,OACE,6BAASV,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,wCACA,wBAAIA,UAAU,iBAAd,4CCkCKU,EAxCM,WACnB,OACE,6BAASV,UAAU,iBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,oBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACEW,KAAK,mCACLX,UAAU,qBAFZ,wBAUN,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,iBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACEW,KAAK,uCACLX,UAAU,qBAFZ,wB,wBCELY,GAFEC,UAhBG,SAAC,GAAwB,IAAD,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnB7B,EAAM,UAAG4B,EAAKE,KAAKC,oBAAb,iBAAG,EAAwB/B,cAA3B,aAAG,EAAgCgC,KACzC/B,EAAQ2B,EAAKK,kBAAkBC,MAC/BC,GAAY,UAAAP,EAAKE,KAAKC,oBAAV,eAAwBd,QAAxB,QAElB,OACE,kBAACmB,EAAA,EAAD,CAAQP,SAAUA,EAAUZ,MAAOkB,GACjC,kBAACE,EAAA,EAAD,CAAKpB,MAAM,SACX,kBAACqB,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWtC,OAAQA,EAAQC,MAAOA,IAClC,kBAACsC,EAAA,EAAD,QAOgB","file":"component---src-pages-index-js-47ab4958b5374fa9ff73.js","sourcesContent":["import Img from \"gatsby-image\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst PostsEmpty = () => {\n  return (\n    <p>\n      No blog posts found. Add markdown posts to \"content/blog\" (or the\n      directory you specified for the \"gatsby-source-filesystem\" plugin in\n      gatsby-config.js).\n    </p>\n  );\n};\n\nconst PostsList = ({ author, posts }) => {\n  return (\n    <>\n      {posts.map((post) => {\n        const featuredImgFixed =\n          post.frontmatter?.featuredImage?.childImageSharp?.fixed;\n\n        return (\n          <article\n            itemScope\n            itemType=\"http://schema.org/Article\"\n            key={post.fields.slug}\n          >\n            <div className=\"columns\">\n              <div className=\"column\">\n                <h1\n                  className=\"title is-2 mb-4 has-text-black\"\n                  itemProp=\"headline\"\n                >\n                  <Link to={post.fields.slug} itemProp=\"url\">\n                    {post.frontmatter.title}\n                  </Link>\n                </h1>\n                <h2\n                  className=\"subtitle is-5 mb-4 mt-1 has-text-dark\"\n                  itemProp=\"description\"\n                >\n                  {post.frontmatter.description || post.excerpt}\n                </h2>\n                <p className=\"is-size-6\">\n                  <em>\n                    {author && (\n                      <>\n                        By <Link to=\"/\">{author}</Link> on {` `}\n                      </>\n                    )}\n                    {post.frontmatter.date}\n                  </em>\n                </p>\n              </div>\n              {featuredImgFixed && (\n                <div className=\"column is-narrow\">\n                  <Link to={post.fields.slug} itemProp=\"url\">\n                    <figure className=\"image block\">\n                      <Img fixed={featuredImgFixed} />\n                    </figure>\n                  </Link>\n                </div>\n              )}\n            </div>\n            <div className=\"mt-6 mb-6\">\n              <hr />\n            </div>\n          </article>\n        );\n      })}\n    </>\n  );\n};\n\nconst BlogPosts = ({ author, posts }) => {\n  let content;\n\n  if (posts.length === 0) {\n    content = <PostsEmpty />;\n  } else {\n    content = <PostsList author={author} posts={posts} />;\n  }\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"columns is-centered\">\n          <div className=\"column is-8 mt-6\">{content}</div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BlogPosts;\n","import React from \"react\";\n\nconst HeroProjects = () => {\n  return (\n    <section className=\"hero is-info is-medium\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title is-2\">Community + Open Source + Technology</h1>\n          <h2 className=\"subtitle is-4\">\n            Our commitment to paying it forward.\n          </h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroProjects;\n","import React from \"react\";\n\nconst HeroProjects = () => {\n  return (\n    <section className=\"hero is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Explore Projects</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://github.com/merit-network\"\n                    className=\"button is-primary\"\n                  >\n                    View All Projects\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Join Our Team</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://www.merit.edu/about/careers/\"\n                    className=\"button is-primary\"\n                  >\n                    View Careers\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroProjects;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport About from \"Components/About\";\nimport BlogPosts from \"Components/BlogPosts\";\nimport HeroIntro from \"Components/HeroIntro\";\nimport HeroProjects from \"Components/HeroProjects\";\nimport Layout from \"Components/Layout\";\nimport SEO from \"Components/SEO\";\n\nconst IndexPage = ({ data, location }) => {\n  const author = data.site.siteMetadata?.author?.name;\n  const posts = data.allMarkdownRemark.nodes;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <HeroIntro />\n      <HeroProjects />\n      <BlogPosts author={author} posts={posts} />\n      <About />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          featuredImage {\n            childImageSharp {\n              fixed(height: 150, width: 150) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          tags\n          title\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}