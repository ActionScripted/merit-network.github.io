{"version":3,"sources":["webpack:///./src/components/BlogPosts.js","webpack:///./src/components/HeroIntro.js","webpack:///./src/components/HeroProjects.js","webpack:///./src/pages/index.js"],"names":["PostsEmpty","PostsList","posts","map","post","title","frontmatter","fields","slug","itemScope","itemType","key","className","tags","tag","index","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","BlogPosts","content","length","HeroProjects","href","pageQuery","IndexPage","data","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","Layout","SEO","HeroIntro","About"],"mappings":"6LAGMA,EAAa,WACjB,OACE,yLAQEC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,oCACGA,EAAMC,KAAI,SAACC,GACV,IAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,6BACEC,WAAS,EACTC,SAAS,4BACTC,IAAKP,EAAKG,OAAOC,MAEjB,gCACE,yBAAKI,UAAU,QACZR,EAAKE,YAAYO,KAAKV,KAAI,SAACW,EAAKC,GAC/B,OACE,0BAAMH,UAAU,MAAMD,IAAKI,GACxBD,OAKT,wBAAIF,UAAU,SACZ,kBAAC,OAAD,CAAMI,GAAIZ,EAAKG,OAAOC,KAAMS,SAAS,OACnC,0BAAMA,SAAS,YAAYZ,KAG/B,wBAAIO,UAAU,YAAYR,EAAKE,YAAYY,OAE7C,uBACEC,wBAAyB,CACvBC,OAAQhB,EAAKE,YAAYe,aAAejB,EAAKkB,SAE/CL,SAAS,sBA6BRM,EApBG,SAAC,GAAe,IAC5BC,EADetB,EAAY,EAAZA,MASnB,OALEsB,EADmB,IAAjBtB,EAAMuB,OACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAWvB,MAAOA,IAI5B,6BAASU,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAeY,OCnDzBE,EAfM,WACnB,OACE,6BAASd,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,wCACA,wBAAIA,UAAU,iBAAd,4CCkCKc,EAxCM,WACnB,OACE,6BAASd,UAAU,iBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,oBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACEe,KAAK,mCACLf,UAAU,qBAFZ,wBAUN,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,iBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACEe,KAAK,uCACLf,UAAU,qBAFZ,wB,wBCCLgB,GAFEC,UAfG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwB7B,QAAxB,QACZH,EAAQ4B,EAAKK,kBAAkBC,MAErC,OACE,kBAACC,EAAA,EAAD,CAAQN,SAAUA,EAAU1B,MAAO2B,GACjC,kBAACM,EAAA,EAAD,CAAKjC,MAAM,SACX,kBAACkC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWrC,MAAOA,IAClB,kBAACsC,EAAA,EAAD,QAOgB","file":"component---src-pages-index-js-425295ac8420ea5210d0.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst PostsEmpty = () => {\n  return (\n    <p>\n      No blog posts found. Add markdown posts to \"content/blog\" (or the\n      directory you specified for the \"gatsby-source-filesystem\" plugin in\n      gatsby-config.js).\n    </p>\n  );\n};\n\nconst PostsList = ({ posts }) => {\n  return (\n    <>\n      {posts.map((post) => {\n        const title = post.frontmatter.title || post.fields.slug;\n\n        return (\n          <article\n            itemScope\n            itemType=\"http://schema.org/Article\"\n            key={post.fields.slug}\n          >\n            <header>\n              <div className=\"tags\">\n                {post.frontmatter.tags.map((tag, index) => {\n                  return (\n                    <span className=\"tag\" key={index}>\n                      {tag}\n                    </span>\n                  );\n                })}\n              </div>\n              <h1 className=\"title\">\n                <Link to={post.fields.slug} itemProp=\"url\">\n                  <span itemProp=\"headline\">{title}</span>\n                </Link>\n              </h1>\n              <h2 className=\"subtitle\">{post.frontmatter.date}</h2>\n            </header>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: post.frontmatter.description || post.excerpt,\n              }}\n              itemProp=\"description\"\n            />\n          </article>\n        );\n      })}\n    </>\n  );\n};\n\nconst BlogPosts = ({ posts }) => {\n  let content;\n\n  if (posts.length === 0) {\n    content = <PostsEmpty />;\n  } else {\n    content = <PostsList posts={posts} />;\n  }\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"columns is-centered\">\n          <div className=\"column is-8\">{content}</div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BlogPosts;\n","import React from \"react\";\n\nconst HeroProjects = () => {\n  return (\n    <section className=\"hero is-info is-medium\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title is-2\">Community + Open Source + Technology</h1>\n          <h2 className=\"subtitle is-4\">\n            Our commitment to paying it forward.\n          </h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroProjects;\n","import React from \"react\";\n\nconst HeroProjects = () => {\n  return (\n    <section className=\"hero is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Explore Projects</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://github.com/merit-network\"\n                    className=\"button is-primary\"\n                  >\n                    View All Projects\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Join Our Team</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://www.merit.edu/about/careers/\"\n                    className=\"button is-primary\"\n                  >\n                    View Careers\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroProjects;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport About from \"Components/About\";\nimport BlogPosts from \"Components/BlogPosts\";\nimport HeroIntro from \"Components/HeroIntro\";\nimport HeroProjects from \"Components/HeroProjects\";\nimport Layout from \"Components/Layout\";\nimport SEO from \"Components/SEO\";\n\nconst IndexPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <HeroIntro />\n      <HeroProjects />\n      <BlogPosts posts={posts} />\n      <About />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          tags\n          title\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}