{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","class","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2FAAA,0HAkFeA,UA3EU,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,GAAY,UAAAL,EAAKM,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,QAAQG,SAAS,YAC5Bd,EAAKQ,YAAYH,OAEpB,wBAAIM,UAAU,YAAYX,EAAKQ,YAAYO,UAKnD,6BAASJ,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKK,MAAM,uBACT,yBAAKA,MAAM,eACT,yBACEC,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCL,SAAS,oBAMnB,6BACA,gCACE,kBAAC,IAAD,QAGJ,yBAAKH,UAAU,iBACb,wBACES,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGnB,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKC,YAAYH,MADpB,WAaP,IAAMyB,EAAS","file":"component---src-templates-blog-post-js-2dda62f24626b0980d85.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport About from \"../components/About\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <div className=\"hero is-info\">\n            <div className=\"hero-body\">\n              <div className=\"container has-text-centered\">\n                <h1 className=\"title\" itemProp=\"headline\">\n                  {post.frontmatter.title}\n                </h1>\n                <h2 className=\"subtitle\">{post.frontmatter.date}</h2>\n              </div>\n            </div>\n          </div>\n        </header>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div class=\"columns is-centered\">\n              <div class=\"column is-7\">\n                <div\n                  dangerouslySetInnerHTML={{ __html: post.html }}\n                  itemProp=\"articleBody\"\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n        <hr />\n        <footer>\n          <About />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}