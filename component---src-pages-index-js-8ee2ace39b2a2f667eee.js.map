{"version":3,"sources":["webpack:///./src/components/Home/HeroIntro.js","webpack:///./src/components/Home/HeroProjects.js","webpack:///./src/pages/index.js"],"names":["HeroProjects","className","href","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6LAEe,SAASA,IAStB,OACE,6BAASC,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,wCACA,wBAAIA,UAAU,iBAAd,2CCdK,SAASD,IAStB,OACE,6BAASC,UAAU,iBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,oBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACEC,KAAK,mCACLD,UAAU,qBAFZ,wBASN,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,iBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACEC,KAAK,uCACLD,UAAU,qBAFZ,uB,4BCsCLE,GAFEC,UA5DG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,KACX,kBAAC,IAAD,MACA,yLAUJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,MACA,wBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAACC,GACV,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACEpB,UAAU,iBACVsB,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,OACnC,0BAAMA,SAAS,YAAYhB,KAG/B,+BAAQQ,EAAKC,YAAYQ,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,SAE/CL,SAAS,yBAcP","file":"component---src-pages-index-js-8ee2ace39b2a2f667eee.js","sourcesContent":["import React from \"react\";\n\nexport default function HeroProjects() {\n  /*\n  const inlineStyles = {\n    backgroundColor: 'transparent',\n    backgroundImage: 'url(\"https://www.merit.edu/wp-content/uploads/2018/01/about_header.png\")',\n    backgroundSize: 'cover',\n  };\n  */\n\n  return (\n    <section className=\"hero is-info is-medium\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title is-2\">Community + Open Source + Technology</h1>\n          <h2 className=\"subtitle is-4\">\n            Our commitment to paying it forward.\n          </h2>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport default function HeroProjects() {\n  /*\n  const inlineStyles = {\n    backgroundColor: 'transparent',\n    backgroundImage: 'url(\"https://www.merit.edu/wp-content/uploads/2018/01/about_header.png\")',\n    backgroundSize: 'cover',\n  };\n  */\n\n  return (\n    <section className=\"hero is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Explore Projects</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://github.com/merit-network\"\n                    className=\"button is-primary\"\n                  >\n                    View All Projects\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Join Our Team</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://www.merit.edu/about/careers/\"\n                    className=\"button is-primary\"\n                  >\n                    View Careers\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport HeroIntro from \"../components/Home/HeroIntro\";\nimport HeroProjects from \"../components/Home/HeroProjects\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <HeroIntro />\n      <HeroProjects />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}